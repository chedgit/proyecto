<?xml version="1.0"?>
<doc>
<assembly>
<name>
GEOCATMIN
</name>
</assembly>
<members>
<member name="M:GEOCATMIN.Barra_General.ArcGISCategoryRegistration(System.Type)">
	<summary>
 Required method for ArcGIS Component Category registration -
 Do not modify the contents of this method with the code editor.
 </summary>
</member><member name="M:GEOCATMIN.Barra_General.ArcGISCategoryUnregistration(System.Type)">
	<summary>
 Required method for ArcGIS Component Category unregistration -
 Do not modify the contents of this method with the code editor.
 </summary>
</member><member name="M:GEOCATMIN.m_Form1.UseCustomToolOnWindowsForm(ESRI.ArcGIS.Framework.IApplication,System.String)">
	<summary>Connect a tool embedded in a Windows Form with the ArcGIS Application Framework.</summary>
	<param name="application">An IApplication interface.</param>
	<param name="uidValue">A System.String that is where your 'Application_Root_Namespace'  +  '.'  +  'Your_COM_Class_Tool'. The 'Application_Root_Namespace' is obtained in Visual Studio by clicking Project menu. Ex: "MyArcGISApplication.MyCustomTool"</param>
	<remarks>
This snippet assumes you have a Windows Form that is launched as a result of a BaseCommand click in ArcGIS Desktop.
See the walkthrough document ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ESRI.EDNv9.2/NET_Desktop/01c01659-cdf8-4579-9c87-2b965e872d84.htm for an example of how to create and use a BaseCommand. 
On the Windows Form you have a Windows Button, that when you click will execute the functionality of another custom COM Class that Inherits ESRI.ArcGIS.ADF.BaseClasses.BaseTool.
This snippet would be inserted the Windows Form code behind file (.vb or .cs) and called as a result of the Windows Button click event.
</remarks>
</member><member name="M:GEOCATMIN.m_Form1.GetCommandOnToolbar(ESRI.ArcGIS.Framework.IApplication,System.String,System.String)">
	<summary>Find a command item particularly on a toolbar.</summary>
	<param name="application">An IApplication interface.</param>
	<param name="toolbarName">A System.String that is the name of the toolbar to return. Example: "esriArcMapUI.StandardToolBar"</param>
	<param name="commandName">A System.String that is the name of the command to return. Example: "esriFramework.HelpContentsCommand"</param>
	<returns>An ICommandItem interface.</returns>
	<remarks>Refer to the EDN document http://edndoc.esri.com/arcobjects/9.1/default.asp?URL=/arcobjects/9.1/ArcGISDevHelp/TechnicalDocuments/Guids/ArcMapIds.htm for a listing of available CLSID's and ProgID's that can be used as the toolbarName and commandName parameters.</remarks>
</member><member name="P:GEOCATMIN.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:GEOCATMIN.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:GEOCATMIN.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:GEOCATMIN.Menu_Base.ArcGISCategoryRegistration(System.Type)">
	<summary>
 Required method for ArcGIS Component Category registration -
 Do not modify the contents of this method with the code editor.
 </summary>
</member><member name="M:GEOCATMIN.Menu_Base.ArcGISCategoryUnregistration(System.Type)">
	<summary>
 Required method for ArcGIS Component Category unregistration -
 Do not modify the contents of this method with the code editor.
 </summary>
</member>
</members>
</doc>